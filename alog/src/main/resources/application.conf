akka {
	quartz {
		schedules {
			LogPolling {
				description = "Log polling schedule"
				expression = "*/30 * * ? * *"
			}
		}
	}
	loglevel = INFO
	#loggers = ["com.typesafe.trace.Slf4jTraceContextLogger"]
}

redis {
  database_host = "localhost" #"pearl.weinell.local"
  database_port = 6379
}
mongo {
  database_host = "localhost" #"pearl.weinell.local"
  database_port = 27017
  database_name = "alog"
}


activator {
  trace {
    enabled = true                # enable tracing
    node = ALog					# give this node a name

    traceable {
      "/user/load" = on
      "/user/*"  = on      # trace all actors in this subtree
      "*"               = off     # other actors are not traced
    }

    sampling {
      #"/user/someActor" = 1       # sample every trace for someActor
      "/user/load" = 1
      "/user/*"  = 1 
    }
  }
}

alog {
    file-load-dispatcher {
	    # Dispatcher is the name of the event-based dispatcher
	    type = Dispatcher
	    # What kind of ExecutionService to use
	    executor = "fork-join-executor"
	    # Configuration for the fork join pool
	    fork-join-executor {
	    # Min number of threads to cap factor-based parallelism number to
	    parallelism-min = 2
	    # Parallelism (threads) ... ceil(available processors * factor)
	    parallelism-factor = 2.0
	    # Max number of threads to cap factor-based parallelism number to
	    parallelism-max = 10
	    }
	    # Throughput defines the maximum number of messages to be
	    # processed per actor before the thread jumps to the next actor.
	    # Set to 1 for as fair as possible.
	    throughput = 100
    }
}